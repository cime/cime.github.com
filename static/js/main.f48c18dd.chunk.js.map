{"version":3,"sources":["img/avatar.png","components/About.tsx","components/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","About","Row","Col","xs","className","src","avatar","href","target","Button","color","block","size","onClick","print","Projects","state","repositories","fetch","then","response","json","setState","filter","x","fork","this","map","repo","html_url","title","name","description","key","id","language","renderRepositories","Component","App","props","toggle","bind","isOpen","Navbar","light","expand","fixed","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","to","NavLink","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f48c18dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.165eb227.png\";","import React, { PureComponent } from 'react';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport avatar from '../img/avatar.png';\r\n\r\nexport const About = () => {\r\n    const printPage = () => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        print();\r\n    };\r\n\r\n    return <Row>\r\n        <Col xs={9}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 noPrint\">\r\n                    <img\r\n                        className=\"thumbnail\"\r\n                        src={avatar}\r\n                    />\r\n                </div>\r\n                <div className=\"jumbotron col-8\">\r\n                    <h1>Andrej Cimperšek</h1>\r\n                    <h3>SOFTWARE ENGINEER</h3>\r\n                    <p>\r\n                        <i className=\"fa fa-map-marker\" /> Koper, Slovenia\r\n                </p>\r\n                </div>\r\n            </div>\r\n            <p>\r\n                My name is Andrej Cimperšek. I'm a student at University of\r\n                Primorska, Faculty of Mathematics, Natural Sciences and\r\n                Information Technologies, currently working at Actual IT d.d.\r\n        </p>\r\n            <div className=\"page-header\">\r\n                <h3>Education</h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        UP FAMNIT, Computer science\r\n            </h4>\r\n                    <p className=\"list-group-item-text\">\r\n                        University of Primorska, Faculty of Mathematics, Natural\r\n                        Sciences and Information Technologies, Computer Science\r\n            </p>\r\n                </li>\r\n            </ul>\r\n            <div className=\"page-header\">\r\n                <h3>Work History</h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        Actual IT <small>(December 2010 - Present)</small>\r\n                    </h4>\r\n                    <p className=\"list-group-item-text\">Software Engineer</p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        UP PINT <small>(June 2010 - September 2011)</small>\r\n                    </h4>\r\n                    <p className=\"list-group-item-text\">Academic project LIDAR</p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        Infodesign <small>(April 2008 - July 2010)</small>\r\n                    </h4>\r\n                    <p className=\"list-group-item-text\">Web developer</p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        Grafikarna d.o.o. <small>(January 2008 - June 2009)</small>\r\n                    </h4>\r\n                    <p className=\"list-group-item-text\">Web developer</p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <h4 className=\"list-group-item-heading\">\r\n                        UP, Faculty of educational sciences{\" \"}\r\n                        <small>(May 2007 - November 2007)</small>\r\n                    </h4>\r\n                    <p className=\"list-group-item-text\">\r\n                        MVO, e-learning for Slovenian Ministry of defence\r\n            </p>\r\n                    <p className=\"list-group-item-text\">\r\n                        Google Maps integration for ISMO - Information System about\r\n                        the Marine Environment for Port of Koper\r\n            </p>\r\n                </li>\r\n            </ul>\r\n            <div className=\"page-header\">\r\n                <h3>Skills &amp; Expertise</h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">.NET/C#</li>\r\n                <li className=\"list-group-item\">ASP.NET Core</li>                <li className=\"list-group-item\">Microservices, Kubernetes, RabbitMQ</li>\r\n                <li className=\"list-group-item\">SQL (SQL Server, PostgreSQL)</li>\r\n                <li className=\"list-group-item\">React, Redux</li>\r\n                <li className=\"list-group-item\">Angular</li>\r\n                <li className=\"list-group-item\">AngularJS, Backbone, HTML5, CSS3</li>\r\n                <li className=\"list-group-item\">NoSQL (Redis, MongoDB)</li>\r\n                <li className=\"list-group-item\">SharePoint Development</li>\r\n                <li className=\"list-group-item\">Android development</li>\r\n                <li className=\"list-group-item\">Integration, Data Migration</li>\r\n                <li className=\"list-group-item\">WPF, Silverlight, MVVM</li>\r\n                <li className=\"list-group-item\">Python, Java, PHP</li>\r\n            </ul>\r\n            </Col>\r\n        <Col xs={3}>\r\n            <p><i className=\"fa fa-envelope\"></i> Email: <a href=\"mailto:cimpersek.andrej@gmail.com\">Andrej Cimperšek</a></p>\r\n            <p><i className=\"fab fa-linkedin\"></i> Linkedin: <a href=\"http://si.linkedin.com/in/candrej\" target=\"_blank\">Andrej Cimperšek</a></p>\r\n            <p><i className=\"fab fa-github\"></i> Github: <a href=\"http://github.com/cime\" target=\"_blank\">@cime</a></p>\r\n\r\n            <Button color=\"secondary\" block size=\"lg\" onClick={() => printPage()}><i className=\"fa fa-print\"></i> Print</Button>\r\n            <Button color=\"primary\" block size=\"lg\"><i className=\"fa fa-download\"></i> Download</Button>\r\n        </Col>\r\n    </Row>\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n/** @type {{thumbnail: React.CSSProperties}} */\r\nconst style = {\r\n    thumbnail: {\r\n        float: 'left',\r\n        maxHeight: 190\r\n    }\r\n} as any;\r\n\r\nexport class Projects extends Component {\r\n    state = { repositories: [] }\r\n    componentWillMount() {\r\n        fetch('https://api.github.com/users/cime/repos').then((response) => response.json()).then((repositories) => {\r\n            this.setState((state) => ({...state, repositories: repositories.filter((x: any) => !x.fork)}))\r\n        });\r\n    }\r\n\r\n    renderRepositories() {\r\n        return <div className=\"list-group\">\r\n            {\r\n                this.state.repositories.map((repo: any) => <a href={repo.html_url} target=\"_blank\" title={repo.name + ' - ' + repo.description} className=\"list-group-item list-group-item-action\" key={repo.id}>\r\n                    <h5 className=\"mb-1\">{repo.name}</h5>\r\n                    <p className=\"mb-1\">{repo.description}</p>\r\n                    <small>Language: <strong>{repo.language}</strong></small>\r\n                </a>)\r\n            }\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Row className=\"mt-5\">\r\n                <Col>\r\n                    <h2><i className=\"fab fa-github\"></i> Github</h2>\r\n\r\n                    { this.state.repositories ? this.renderRepositories() : <span>Loading...</span> }\r\n                </Col>\r\n            </Row>\r\n        </>;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport { HashRouter as Router, NavLink as Link, Route } from 'react-router-dom';\r\nimport { About } from './components/About';\r\nimport { Projects } from './components/Projects';\r\n\r\nclass App extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <>\r\n                    <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\r\n                        <Container>\r\n                            <NavbarBrand href=\"#/\">Andrej Cimperšek</NavbarBrand>\r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem>\r\n                                        <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-user\"></i> About</Link>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <Link className=\"nav-link\" to=\"/projects\"><i className=\"fa fa-list\"></i> Projects</Link>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                    <NavItem>\r\n                                        <NavLink href=\"mailto:cimpersek.andrej@gmail.com\"><i className=\"fa fa-envelope\"></i> Email</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink href=\"http://si.linkedin.com/in/candrej\"><i className=\"fab fa-linkedin\"></i> Linkedin</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink href=\"https://github.com/cime\"><i className=\"fab fa-github\"></i> GitHub</NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                    <Container>\r\n                        <Route exact path=\"/\" component={About} />\r\n                        <Route exact path=\"/projects\" component={Projects} />\r\n                    </Container>\r\n                    <Container className=\"text-muted text-center mt-5 mb-3\">\r\n                        Copyright © 2012-2020 All Rights Reserved\r\n                    </Container>\r\n                </>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}